name: Flutter iOS Build & Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  FLUTTER_VERSION: "3.27.0"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install

      - name: Build iOS app
        run: |
          flutter build ios --release --no-codesign
        env:
          FLUTTER_BUILD_NUMBER: ${{ github.run_number }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos/Runner.app

  build-ios-simulator:
    name: Build iOS Simulator
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install

      - name: Build iOS Simulator app
        run: |
          flutter build ios --debug --simulator
        env:
          FLUTTER_BUILD_NUMBER: ${{ github.run_number }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-simulator-build
          path: build/ios/iphonesimulator/Runner.app

  code-sign-ios:
    name: Code Sign iOS
    runs-on: macos-latest
    needs: build-ios
    if: github.event_name == 'release' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install

      - name: Setup code signing
        uses: apple-actions/import-codesigning-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}

      - name: Setup provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: 'com.example.smartHome'
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Build signed iOS app
        run: |
          flutter build ios --release
        env:
          FLUTTER_BUILD_NUMBER: ${{ github.run_number }}

      - name: Create IPA
        run: |
          cd build/ios/iphoneos
          xcrun altool --upload-app --type ios --file "Runner.ipa" --username "${{ secrets.APPSTORE_CONNECT_USERNAME }}" --password "${{ secrets.APPSTORE_CONNECT_APP_SPECIFIC_PASSWORD }}"

      - name: Upload signed build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-signed-build
          path: build/ios/iphoneos/Runner.ipa

  deploy-testflight:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: code-sign-ios
    if: github.event_name == 'release' && github.ref == 'refs/heads/main'
    steps:
      - name: Download signed build
        uses: actions/download-artifact@v4
        with:
          name: ios-signed-build
          path: build/ios/iphoneos

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight@v1
        with:
          app-path: build/ios/iphoneos/Runner.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build-ios, build-ios-simulator, deploy-testflight]
    if: always()
    steps:
      - name: Notify on success
        if: needs.build-ios.result == 'success' || needs.build-ios-simulator.result == 'success'
        run: |
          echo "✅ iOS build completed successfully!"
          
      - name: Notify on failure
        if: needs.build-ios.result == 'failure' || needs.build-ios-simulator.result == 'failure'
        run: |
          echo "❌ iOS build failed!"
          exit 1 